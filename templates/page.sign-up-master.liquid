{%- assign headerSnippetPath = "header-index" -%}{%- assign wfPage = "666f5642c1e7e520836b045e" -%}{%- assign bodyClasses = "body-4" -%}
  <div class="w-users-userformpagewrap page-wrapper"><img loading="lazy" src="{{ '256x256-logo.png' | asset_url }}" alt="" class="image-21">
    <div class="form-block-2 w-form">
      {%- form "contact",  class: "former klaviyo-form" -%}<label for="contact[first_name]" class="field-label">{{ 't24eeab' | t }}</label><input class="text-field w-input" maxlength="256" name="contact[first_name]" data-name="first_name" placeholder="" type="text" id="first_name"><label for="email-4" class="field-label">{{ 'tn2b7010d0' | t }}</label><input class="text-field w-input" maxlength="256" name="contact[email]" data-name="email" placeholder="" type="email" id="email-4" required=""><label for="contact[phone_number]" class="field-label">{{ 'tn55f81185' | t }}</label><input class="text-field w-input" maxlength="256" name="contact[phone_number]" data-name="phone_number" placeholder="" type="tel" id="phone_number"><input type="submit" data-wait="Please wait..." class="submit-button w-button" value="{{ 't23514a' | t }}">{%- assign form_success = form.posted_successfully? -%}{%- assign form_errors = form.errors -%}{%- render "form-general-script", form_success: form_success, form_errors: form_errors -%}{%- endform -%}
      <div class="w-form-done  {% if form_success %}form-posted-successfully{% endif %}">
        <div>{{ 't5a0ea5a1' | t }}</div>
      </div>
      {%- unless form_success -%}<div class="w-form-fail  {% if form.errors %}form-has-errors{% endif %}">
        <div>{%- render "form-errors", form_errors: form_errors -%}</div>
      </div>{%- endunless -%}
    </div>
  </div>
  <div class="signup"><img src="{{ 'crest_transparent.png' | asset_url }}" loading="lazy" sizes="100vw" srcset="{{ 'crest_transparent-p-500.png' | asset_url }} 500w, {{ 'crest_transparent-p-800.png' | asset_url }} 800w, {{ 'crest_transparent-p-1080.png' | asset_url }} 1080w, {{ 'crest_transparent-p-1600.png' | asset_url }} 1600w, {{ 'crest_transparent.png' | asset_url }} 1920w" alt="" class="bg"></div>
  {%- render 'footer' -%}
  <script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=665ab0eb095a22df26e66257" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
  <script src="{{ 'webflow.js' | asset_url }}" type="text/javascript"></script>
  <script async="" type="text/javascript" src="https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=WWdTnL"></script>
  <script>
document.addEventListener('DOMContentLoaded', function() {
    // Convert given phone number to the format +12345678901
    function formatPhoneNumber(number) {
        let cleaned = ('' + number).replace(/\D/g, '');
        let match = cleaned.match(/^1?(\d{10})$/);
        if (match) {
            return '+1' + match[1];
        }
        return null;
    }
    const klaviyoForms = document.querySelectorAll('.klaviyo-form');
    klaviyoForms.forEach((form) => {
        form.addEventListener('submit', function(event) {
            // Always prevent the default form submission
            event.preventDefault();
            // Form Data Extraction
            const formData = new FormData(form);
            const attributes = {};
            const standardAttributes = ["email", "phone_number", "external_id", "anonymous_id", "_kx", "first_name", "last_name", "organization", "title", "image"];
            const nestedObjects = {
                "location": ["address1", "address2", "city", "country", "region", "zip", "timezone", "ip"]
            };
            for (let [key, value] of formData.entries()) {
                if (standardAttributes.includes(key)) {
                    attributes[key] = value;
                } else {
                    let addedToNested = false;
                    for (const [objectName, fields] of Object.entries(nestedObjects)) {
                        if (fields.includes(key)) {
                            if (!attributes[objectName]) attributes[objectName] = {};
                            attributes[objectName][key] = value;
                            addedToNested = true;
                            break;
                        }
                    }
                    if (!addedToNested) {
                        if (!attributes.properties) attributes.properties = {};
                        attributes.properties[key] = value;
                    }
                }
            }
            // Phone Number Formatting
            if (attributes.phone_number) {
                attributes.phone_number = formatPhoneNumber(attributes.phone_number);
                if (!attributes.phone_number) {
                    console.error('Error: Invalid phone number format.');
                    let customErrorElement = form.querySelector('.custom-error');
                    if (customErrorElement) {
                        customErrorElement.textContent = 'Invalid phone number format. Please use a format like 123-456-7890 or 1234567890.';
                        customErrorElement.style.display = 'block';
                    }
                    return;
                }
            }
            // Klaviyo API Configuration
            const klaviyoListId = form.getAttribute("data-klaviyo-list-id");
            const options = {
                method: 'POST',
                headers: {
                    'revision': '2023-08-15',
                    'content-type': 'application/json'
                },
                body: JSON.stringify({
                    data: {
                        type: 'subscription',
                        attributes: {
                            custom_source: form.getAttribute("data-name"),
                            profile: {
                                data: {
                                    type: 'profile',
                                    attributes: attributes
                                }
                            }
                        },
                        relationships: { list: { data: { type: 'list', id: klaviyoListId }}}
                    }
                })
            };
            // Klaviyo API Call
            fetch('https://a.klaviyo.com/client/subscriptions/?company_id=WWdTnL', options)
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => Promise.reject(err));
                } else {
                    // Display the success message on successful submission
                    let customSuccessElement = form.querySelector('.custom-success');
                    if (customSuccessElement) customSuccessElement.style.display = 'block';
                }
            })
            .catch(err => {
                console.error('Error sending data to Klaviyo:', err);
                // Display the error message on error
                let customErrorElement = form.querySelector('.custom-error');
                if (customErrorElement) customErrorElement.style.display = 'block';
            });
        });
    });
});
</script>

{{ 'udesly-shopify.min.js' | asset_url | script_tag }}